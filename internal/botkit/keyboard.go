package botkit

import (
	"whattowatch/internal/types"

	"github.com/go-telegram/bot"
	"github.com/go-telegram/ui/keyboard/inline"
	"github.com/go-telegram/ui/keyboard/reply"
)

type keyboardFunc func() *reply.ReplyKeyboard

func (t *TGBot) getMainKeyboard() *reply.ReplyKeyboard {
	rk := reply.New(
		t.bot,
		reply.WithPrefix("rk_main"),
		reply.IsSelective(),
		reply.ResizableKeyboard(),
	).
		Button("–§–∏–ª—å–º—ã üé•", t.bot, bot.MatchTypeExact, t.onKeyboardChangeEvent("–§–∏–ª—å–º—ã. –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª", t.getMoviesKeyboard)).
		Row().
		Button("–°–µ—Ä–∏–∞–ª—ã üì∫", t.bot, bot.MatchTypeExact, t.onKeyboardChangeEvent("–°–µ—Ä–∏–∞–ª—ã. –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª", t.getTVsKeyboard))

	return rk
}

func (t *TGBot) getMoviesKeyboard() *reply.ReplyKeyboard {
	rk := reply.New(
		t.bot,
		reply.WithPrefix("rk_movies"),
		reply.IsSelective(),
		reply.ResizableKeyboard(),
	).
		Button("–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ üé•", t.bot, bot.MatchTypeExact, t.onContentEvent(t.showMoviePopular, MoviePopular)).
		Button("–õ—É—á—à–∏–µ üé•", t.bot, bot.MatchTypeExact, t.onContentEvent(t.showMovieTop, MovieTop)).
		Button("–ñ–∞–Ω—Ä—ã üé•", t.bot, bot.MatchTypePrefix, t.onGetGenresEvent(types.Movie)).
		Row().
		Button("–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ üé•", t.bot, bot.MatchTypeExact, t.onRecommendationsEvent(t.api.GetRecommendations, types.Movie)).
		Button("–ò–∑–±—Ä–∞–Ω–Ω—ã–µ üé•", t.bot, bot.MatchTypeExact, t.onUserContentEvent(t.storer.GetFavoriteContentIDs, t.api.GetContent, types.Movie, "–£ –≤–∞—Å –Ω–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤")).
		Button("–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ üé•", t.bot, bot.MatchTypeExact, t.onUserContentEvent(t.storer.GetViewedContentIDs, t.api.GetContent, types.Movie, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤")).
		Row().
		Button("üîô –ù–∞–∑–∞–¥", t.bot, bot.MatchTypePrefix, t.onKeyboardChangeEvent("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞", t.getMainKeyboard))

	return rk
}

func (t *TGBot) getTVsKeyboard() *reply.ReplyKeyboard {
	rk := reply.New(
		t.bot,
		reply.WithPrefix("rk_tvs"),
		reply.IsSelective(),
		reply.ResizableKeyboard(),
	).
		Button("–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ üì∫", t.bot, bot.MatchTypeExact, t.onContentEvent(t.showTVPopular, TVPopular)).
		Button("–õ—É—á—à–∏–µ üì∫", t.bot, bot.MatchTypeExact, t.onContentEvent(t.showTVTop, TVTop)).
		Button("–ñ–∞–Ω—Ä—ã üì∫", t.bot, bot.MatchTypePrefix, t.onGetGenresEvent(types.TV)).
		Row().
		Button("–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ üì∫", t.bot, bot.MatchTypeExact, t.onRecommendationsEvent(t.api.GetRecommendations, types.TV)).
		Button("–ò–∑–±—Ä–∞–Ω–Ω—ã–µ üì∫", t.bot, bot.MatchTypeExact, t.onUserContentEvent(t.storer.GetFavoriteContentIDs, t.api.GetContent, types.TV, "–£ –≤–∞—Å –Ω–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Å–µ—Ä–∏–∞–ª–æ–≤")).
		Button("–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ üì∫", t.bot, bot.MatchTypeExact, t.onUserContentEvent(t.storer.GetViewedContentIDs, t.api.GetContent, types.TV, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö —Å–µ—Ä–∏–∞–ª–æ–≤")).
		Row().
		Button("üîô –ù–∞–∑–∞–¥", t.bot, bot.MatchTypePrefix, t.onKeyboardChangeEvent("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞", t.getMainKeyboard))

	return rk
}

func (t *TGBot) getContentActionKeyboard(contentStatus types.ContentStatus, data []byte) *inline.Keyboard {
	kb := inline.New(t.bot).Row()
	if contentStatus.IsFavorite {
		kb = kb.Button("–£–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö", data, t.onContentActionEvent(t.storer.RemoveContentItemFromFavorite))
	} else {
		kb = kb.Button("–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ", data, t.onContentActionEvent(t.storer.AddContentItemToFavorite))
	}

	if contentStatus.IsViewed {
		kb = kb.Button("–£–¥–∞–ª–∏—Ç—å –∏–∑ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö", data, t.onContentActionEvent(t.storer.RemoveContentItemFromViewed))
	} else {
		kb = kb.Button("–î–æ–±–∞–≤–∏—Ç—å –≤ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ", data, t.onContentActionEvent(t.storer.AddContentItemToViewed))
	}

	return kb
}
